pr:
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
      - pipelines/*

trigger: none

variables:
- group: DEMO

stages:

- stage: Infra
  jobs:
  - job: ProviderConfig
    displayName: "Setup Google Cloud SDK"
    steps:

      - script: env

      - bash: |
          # Create environment variable for correct distribution
          export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"

          # Add the Cloud SDK distribution URI as a package source
          echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list

          # Import the Google Cloud Platform public key
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

          # Update the package list and install the Cloud SDK
          sudo apt-get update && sudo apt-get -y install google-cloud-sdk

#displayName: Check gcloud
      - bash: |
          which gcloud &> /dev/null \
            || { echo "[!] gcloud SDK is not installed."; exit 1; } \
            && echo "[i] gcloud installed with $(gcloud version | grep 'Google Cloud SDK')."
#displayName: Check Service Account
      - bash: |
          test ! -z ${GCLOUD_SERVICE_ACCOUNT:-} \
            || { echo "[!] GCLOUD_SERVICE_ACCOUNT environment variable must be set."; exit 1; } \
            && {
              gcloud auth activate-service-account \
                --key-file <(echo ${GCLOUD_SERVICE_ACCOUNT} | base64 -d) \
              || { echo "[!] Unable to activate the service account."; exit 1; } \
              && echo  [i] "Service account set to $(gcloud config get-value account)."
            }
#displayName: Check Project Id
      - bash: |
          test ! -z ${GCLOUD_PROJECT_ID:-} \
            || { echo "[!] GCLOUD_PROJECT_ID environment variable must be set."; exit 1; } \
            && echo  [i] "GCLOUD_PROJECT_ID project set to ${GCLOUD_PROJECT_ID}.";
#displayName: Activate Project
      - bash: |
          gcloud config set project ${GCLOUD_PROJECT_ID} \
            || { echo "[!] Unable to set project ${GCLOUD_PROJECT_ID}."; exit 1; } \
            && echo  [i] "gcloud project set to $(gcloud config get-value project)."
